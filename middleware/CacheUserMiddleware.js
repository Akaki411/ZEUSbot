const {Player, PlayerStatus, PlayerInfo, PlayerResources} = require("../database/Models");
const Data = require("../models/CacheData");
const User = require("../models/User");
const keyboard = require("../variables/Keyboards");
const commands = require("../variables/Commands");
const SceneManager = require("../controllers/SceneController")
const api = require("./API");
const InputManager = require("../controllers/InputManager");
const ErrorHandler = require("../error/ErrorHandler");

module.exports = async (context, next) =>
{
    context.command = context.text?.toLowerCase()
    const {peerId} = context

    if(context.peerType === "chat")
    {
        return next()
    }

    if(Data.users[peerId])
    {
        context.player = Data.users[peerId]
        return next()
    }
    else
    {
        const user = await Player.findOne({where: {id: peerId}})
        if(user)
        {
            if(!user.dataValues.isBanned)
            {
                const status = await PlayerStatus.findOne({where: {id: peerId}})
                const info = await PlayerInfo.findOne({where: {id: peerId}})
                const resources = await PlayerResources.findOne({where: {id: peerId}})
                Data.users[peerId] = new User(user, status, info, resources)
                Data.users[peerId].SetState(SceneManager.StayInStartScreen)
                context.player = Data.users[peerId]
                return next()
            }
            else
            {
                context.send(`üö´–í–Ω–∏–º–∞–Ω–∏–µ!üö´
                                –í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ *public218388422 (¬´ZEUS - –í—Å–µ–ª–µ–Ω–Ω–∞—è –∏–≥—Ä–æ–∫–æ–≤¬ª)
                                –ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π - –Ω–∞–ø–∏—à–∏—Ç–µ –æ–¥–Ω–æ–º—É –∏–∑ –∞–¥–º–∏–Ω–æ–≤:
                                ${Data.admins.map(key => {
                    return "@id" + key.id + "(" + key.nick +")\n"
                })}`, {
                    keyboard: keyboard.none
                })
            }
        }
        else
        {
            const current_keyboard = [[keyboard.registrationButton]]
            if(context.command.match(commands.registration))
            {
                try
                {
                    const peerInfo = await api.GetUserData(context.peerId)
                    let temp

                    //–≤–≤–æ–¥ –Ω–∏–∫–∞
                    let name = await InputManager.InputString(context, `‚úçüèæ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–Ω—Ü–µ–ª—è—Ä–∏—é.\n\n*id${context.peerId} (${peerInfo.first_name}), –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –ø—Ä–æ–µ–∫—Ç–µ *public218388422 (¬´ZEUS - –í—Å–µ–ª–µ–Ω–Ω–∞—è –∏–≥—Ä–æ–∫–æ–≤¬ª).\n\n1Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º, –∫–æ—Ç–æ—Ä—ã–º –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –±—É–¥—É—â–µ–º. –£—á—Ç–∏—Ç–µ, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–Ω—Ç–∏—á–Ω–æ–µ –∏–º—è, —Ä–µ–∞–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–≤—à–µ–µ –≤ –∏—Å—Ç–æ—Ä–∏–∏. –°–æ —Å–ø–∏—Å–∫–æ–º —Ç–∞–∫–∏—Ö –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –Ω–∏–∂–µ.\nüëâüèæ –ì—Ä–µ—á–µ—Å–∫–∏–µ –∏–º–µ–Ω–∞: https://ru.m.wikipedia.org/wiki/–°–ø–∏—Å–æ–∫_–∏–º—ë–Ω_–≥—Ä–µ—á–µ—Å–∫–æ–≥–æ_–ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è\nüëâüèæ –†–∏–º—Å–∫–∏–µ –∏–º–µ–Ω–∞: https://ru.m.wikipedia.org/wiki/–†–∏–º—Å–∫–∏–µ_–∏–º–µ–Ω–∞\nüëâüèæ –ü–µ—Ä—Å–∏–¥—Å–∫–∏–µ –∏–º–µ–Ω–∞: https://ru.m.wikipedia.org/wiki/–ü–µ—Ä—Å–∏–¥—Å–∫–∏–µ_–∏–º–µ–Ω–∞`,
                        current_keyboard,
                        2, 20)
                    if(!name) return
                    temp = await Player.findOne({where: {nick: name}})
                    while(temp && name)
                    {
                        name = await InputManager.InputString(context, `‚ö† –≠—Ç–æ—Ç –Ω–∏–∫ –∑–∞–Ω—è—Ç`,
                            current_keyboard,
                            [2, 20])
                        temp = await Player.findOne({where: {nick: name}})
                    }
                    if(!name) return

                    //–≤–≤–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç–∞
                    const age = await InputManager.InputInteger(context,
                        `2Ô∏è‚É£ –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.\n‚ö† –í–æ–∑—Ä–∞—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω –æ—Ç 16 –¥–æ 100 –ª–µ—Ç.`,
                        current_keyboard,
                        16, 100)
                    if(!age) return

                    //–≤—ã–±–æ—Ä –ø–æ–ª–∞
                    const gender = await InputManager.InputBoolean(context,
                        `3Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.`,
                        current_keyboard,
                        keyboard.manButton,
                        keyboard.womanButton)
                    if(gender === null) return

                    //–æ–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
                    const description = await InputManager.InputString(context,
                        `4Ô∏è‚É£ –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ—ë–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ! –û—Ç–∫—É–¥–∞ –æ–Ω —Ä–æ–¥–æ–º, —á–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è. –í–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å –ª–∏ —É –Ω–µ–≥–æ —Å–µ–º—å—è, –¥–µ—Ç–∏. –° –∫–∞–∫–æ–π —Ü–µ–ª—å—é –æ–Ω –ø—Ä–∏—à—ë–ª –≤ —Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–µ–π—á–∞—Å.\n‚ö† –î–ª–∏–Ω–∞ –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤.`,
                        current_keyboard,
                        0, 1000)
                    if(!description) return

                    //–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
                    let nation = await InputManager.ChooseButton(context,
                        "5Ô∏è‚É£ –ö–∞–∫–æ–≤–∞ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞?",
                        [
                            [keyboard.romanButton, keyboard.celtButton],
                            [keyboard.greekButton, keyboard.armenianButton],
                            [keyboard.persianButton, keyboard.germanButton]
                        ],
                        current_keyboard)

                    switch (nation)
                    {
                        case "rim":
                            nation = "üî± –†–∏–º–ª—è–Ω–∏–Ω"
                            context.send(`üî± –í–∞—à–∏ –ø—Ä–µ–¥–∫–∏ –ø–æ–∫–æ—Ä–∏–ª–∏ –ò—Ç–∞–ª–∏–∫—É –∏ –°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–º–æ—Ä—å–µ, –ø–æ–¥–∞—Ä–∏–ª–∏ –º–∏—Ä—É –∏–Ω—Å—Ç–∏—Ç—É—Ç—ã –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞, –ª–µ–≥–∏–æ–Ω—ã –≤–∞—à–∏—Ö –ø—Ä–µ–¥–∫–æ–≤ —Ö—Ä–∞–±—Ä–æ —Å—Ä–∞–∂–∞–ª–∏—Å—å –∑–∞ –†–∏–º –∏ –µ–≥–æ —Ü–µ–Ω–Ω–æ—Å—Ç–∏, –ø–æ–∫–∞ –Ω–µ –±—ã–ª–∏ –ø–æ–≤–µ—Ä–∂–µ–Ω—ã –æ—Ä–¥–æ–π –≤–∞—Ä–≤–∞—Ä–æ–≤. –ë—Ä–∞–≤–æ!`)
                            break
                        case "celt":
                            nation = "üçÄ –ö–µ–ª—å—Ç"
                            context.send(`üçÄ –í–∞—à–∏ –ø—Ä–µ–¥–∫–∏ –∑–∞–≤–æ–µ–≤–∞–ª–∏ –æ–±—à–∏—Ä–Ω—ã–µ –∑–µ–º–ª–∏, –æ—Ç –ê–ª—å–±–∏–æ–Ω–∞ –¥–æ –ê–Ω–∞—Ç–æ–ª–∏–∏, —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ª–∏ –≤—ã –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ, –¥–∞–Ω–Ω–æ–µ –≤–∞–º?`)
                            break
                        case "greek":
                            nation = "üèõÔ∏è –ì—Ä–µ–∫"
                            context.send(`üèõÔ∏è –°–∫–æ–ª—å–∫–æ —É–º–æ–≤ –ø–æ–¥–∞—Ä–∏–ª–∞ –ì—Ä–µ—Ü–∏—è –º–∏—Ä—É, —Å–∫–æ–ª—å–∫–æ –æ–ª–∏–≤–æ–∫ –±—ã–ª–æ –≤—ã—Ä–∞—â–µ–Ω–æ –Ω–∞ –±–ª–∞–≥–æ–¥–∞—Ç–Ω–æ–π –≥—Ä–µ—á–µ—Å–∫–æ–π –∑–µ–º–ª–µ... –û, –≥—Ä–µ–∫–∏, –≤–µ—Å—å –º–∏—Ä –ø—Ä–æ–ø–∏—Ç–∞–Ω –≤–∞—à–µ–π –∫—É–ª—å—Ç—É—Ä–æ–π! –ë—Ä–∞–≤–æ!`)
                            break
                        case "armenian":
                            nation = "üíÉ –ê—Ä–º—è–Ω–∏–Ω"
                            context.send(`üíÉ –ö—Ä–∞–π –≥–æ—Ä, –≤–∏–Ω–∞... –ù–∞ —Ç–æ–π –ø–æ—á–≤–µ —Ä–∞—Å—Ç—ë—Ç —Ç–æ–ª—å–∫–æ –ª—É—á—à–∞—è –µ–¥–∞, –∞ –≤–∞—à–µ–π –≥–æ—Ä—è—á–µ–π –∫—Ä–æ–≤—å—é –≤–æ—Å—Ö–∏—â–∞—é—Ç—Å—è –≤–æ –≤—Å—ë–º –º–∏—Ä–µ... –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π, –ø—É—Ç–Ω–∏–∫.`)
                            break
                        case "persian":
                            nation = "üêò –ü–µ—Ä—Å"
                            context.send(`üêò –í–æ—Å—Ç–æ—á–Ω—ã–π –∫—Ä–∞–π –±–æ–≥–∞—Ç—Å—Ç–≤ –∏ —à—ë–ª–∫–∞, –ü–µ—Ä—Å–∏—è. –û–≥—Ä–æ–º–Ω—ã–µ –∑–µ–º–ª–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –ø–µ—Ä—Å–∏–¥—Å–∫–æ–º—É –Ω–∞—Ä–æ–¥—É, –∞ –≤–æ–∏–Ω—ã –Ω–∞ —Å–ª–æ–Ω–∞—Ö –¥–æ—Å—Ç–∞–Ω—É—Ç –∫–∞–∂–¥–æ–≥–æ, –∫—Ç–æ –ø–æ—Å–º–µ–µ—Ç –ø–æ—Å—è–≥–Ω—É—Ç—å –Ω–∞ —Å—É–≤–µ—Ä–µ–Ω–∏—Ç–µ—Ç –≥–æ—Ä–¥–æ–π –ü–µ—Ä—Å–∏–∏. –ë—Ä–∞–≤–æ!`)
                            break
                        case "german":
                            nation = "‚öî –ì–µ—Ä–º–∞–Ω–µ—Ü"
                            context.send(`‚öî –ú—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ —Ö—Ä–∞–±—Ä—ã–µ –≤–æ–∏–Ω—ã —Å —Å–µ–≤–µ—Ä–∞. –¢—è–∂—ë–ª—ã–µ —Å–µ–≤–µ—Ä–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –∏—Ö –∫ –ª—é–±—ã–º —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º –∏ –ª–∏—à–µ–Ω–∏—è–º, —Å—É—Ä–æ–≤–µ–µ –Ω–∏—Ö, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –Ω–µ—Ç –Ω–∏–∫–æ–≥–æ –Ω–∞ –≤—Å—ë–º –±–µ–ª–æ–º —Å–≤–µ—Ç–µ. –ë—Ä–∞–≤–æ!`)
                            break
                    }

                    //–º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
                    let countries = Data.GetCountryButtons()

                    let location = await InputManager.KeyboardBuilder(context,
                        "6Ô∏è‚É£ –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤ –∫–∞–∫–æ–π —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—è–≤–∏—Ç—å—Å—è –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                        countries,
                        current_keyboard)
                    if(!location) return
                    location = Data.ParseButtonID(location)

                    await context.send(`${Data.GetCountryName(location)}\n${Data.countries[location].description}`,
                        {
                            attachment: Data.countries[location].welcomePhotoURL
                        })

                    const user = await Player.create({
                        id: context.peerId,
                        nick: name,
                        gender: gender
                    })
                    const status = await PlayerStatus.create({
                        id: context.peerId,
                        location: Data.countries[location].capitalID
                    })
                    const info = await PlayerInfo.create({
                        id: context.peerId,
                        description: description,
                        nationality: nation,
                        age: age
                    })
                    const resources = await PlayerResources.create({id: context.peerId})
                    Data.users[context.peerId] = new User(user, status, info, resources)
                    Data.users[context.peerId].SetState(SceneManager.StayInStartScreen)
                    context.player = Data.users[context.peerId]

                    let kb = SceneManager.GetStartMenuKeyboard(context)

                    context.send(`üèÅ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, *id${context.peerId}(${name}). –†–∞–¥—É–π—Ç–µ—Å—å –∫–∞–∂–¥–æ–º—É –¥–Ω—é, –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–º—É –≤ —ç—Ç–æ–º –º–∏—Ä–µ. –ü—É—Å—Ç—å –ë–æ–≥–∏ –æ–±–µ—Ä–µ–≥–∞—é—Ç –≤–∞—à –ø—É—Ç—å...`, {
                        keyboard: keyboard.build(kb)
                    })
                    context.send("–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –±–ª–∏–∂–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ –ø—Ä–æ–µ–∫—Ç–æ–º, —Ç–æ –∏–∑—É—á–∏—Ç–µ –Ω–∞—à—É –≥—Ä—É–ø–ø—É. –î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞–º–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª \"–õ–æ–∫–∞—Ü–∏—è\", –¥–ª—è –≥–ª—É–±–∏–Ω–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è –º–æ–∂–µ—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å —Å–æ–æ–±—â–µ—Å—Ç–≤–∞. –í—ã–±–∏—Ä–∞–π—Ç–µ —Å —É–º–æ–º!",{
                        template: `{
                            "type": "carousel",
                            "elements": [
                                ${Data.countries.filter(key => {
                                    return key !== undefined
                                }).map(key => {
                                    if(key)
                                    {
                                        return JSON.stringify({
                                            title: key.name,
                                            description: key.description,
                                            photo_id: key.photoURL.replace("photo", ""),
                                            action: {
                                                type: "open_link",
                                                link: "https://vk.com/public" + key.groupID
                                            },
                                            buttons: [
                                                {
                                                    action: {
                                                        type: "open_link",
                                                        link: "https://vk.com/public" + key.groupID,
                                                        label: "–ü–µ—Ä–µ–π—Ç–∏ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ"
                                                    }
                                                }
                                            ]
                                        })
                                    }
                                })}
                            ]
                        }`
                    })
                }
                catch (e)
                {
                    context.player = {
                        id: context.peerId,
                        nick: "–ù–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
                    }
                    await ErrorHandler.SendLogs(context, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", e)
                }
            }
            else if(context.peerType === "user")
            {
                context.send(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Ä–æ–µ–∫—Ç ZEUS, –±–æ–ª–µ–µ —Ç—ã—Å—è—á–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —É–∂–µ –¥–≤–∞ –≥–æ–¥–∞ –∏–≥—Ä–∞—é—Ç —Å –Ω–∞–º–∏.\n–í–æ–π–Ω—ã, –∏–Ω—Ç—Ä–∏–≥–∏, —Å–∏–º—É–ª—è—Ç–æ—Ä –∞–Ω—Ç–∏—á–Ω–æ–≥–æ –∂–∏—Ç–µ–ª—è, –≤—Å—ë —ç—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è —Ç–µ–±—è... –æ—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!\n–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –º–µ–Ω—é –∏–≥—Ä–æ–∫–∞... \n–° –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –≤–∞—à–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –±—É–¥—É—Ç –º–µ–Ω—è—Ç—å—Å—è –∏ –≤–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.\n–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è" –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–µ–∫—Ç–∞.`,
                    {
                        keyboard: keyboard.build(current_keyboard)
                    })
            }
        }
    }
}