const Data = require("../models/CacheData");
const api = require("../middleware/API");
const {Player} = require("../database/Models");

class GameController
{
    async BanUser(id)
    {
        try
        {
            const user = await Player.findOne({where: {id: id}})
            if (Data.users[user.dataValues.id]) Data.users[user.dataValues.id].isBanned = true
            user.set({
                isBanned: true
            })
            await user.save()
            await api.SendMessage(user.dataValues.id,`üö´–í–Ω–∏–º–∞–Ω–∏–µ!üö´
                                                        –í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ *public218388422 (¬´ZEUS - –í—Å–µ–ª–µ–Ω–Ω–∞—è –∏–≥—Ä–æ–∫–æ–≤¬ª)
                                                        –ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π - –Ω–∞–ø–∏—à–∏—Ç–µ –æ–¥–Ω–æ–º—É –∏–∑ –∞–¥–º–∏–Ω–æ–≤:
                                                        ${Data.admins.map(key => {
                if(key) return "*id" + key.id + "(" + key.nick +")\n"
            })}`)
            return true
        }
        catch (e)
        {
            return false
        }
    }

    async UnbanUser(id)
    {
        try
        {
            const user = await Player.findOne({where: {id: id}})
            if (Data.users[user.dataValues.id]) Data.users[user.dataValues.id].isBanned = false
            user.set({
                isBanned: false
            })
            await user.save()
            await api.SendMessage(user.dataValues.id,`‚úÖ –í—ã –±—ã–ª–∏ —Ä–∞–∑–±–∞–Ω–µ–Ω—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ *public218388422 (¬´ZEUS - –í—Å–µ–ª–µ–Ω–Ω–∞—è –∏–≥—Ä–æ–∫–æ–≤¬ª)`)
            return true
        }
        catch (e)
        {
            return false
        }
    }
}

module.exports = new GameController()